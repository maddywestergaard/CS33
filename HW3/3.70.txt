A. e1.p    0
   e1.y    8
   e2.x    0
   e2.next 8

B. 16 bytes, since that is the size of both of the structs

C. up->e2.x = *(up->e2.next->e1.p) - (up->e2.next->e1.y); 

looking at the assembly code, i derived this:

up->___ = *(*(*(up+8))) - *(*(up+8)+8)
*(up+8) is up->e2.next, therefore
up->e2.x =  *(*(up->e2.next)) - *(up->e2.next + 8)

then, *(*(up->e2.next)) has to be dereferencable, so it must be a pointer
for the second term, it is not a pointer, so

up->e2.x = *(up->e2.next->e1.p) - (up->e2.next->e1.y);
